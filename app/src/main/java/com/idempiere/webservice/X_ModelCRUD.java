package com.idempiere.webservice;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.8.1
//
// Created by Quasar Development at 20/04/2017
//
//---------------------------------------------------


import org.ksoap2.serialization.AttributeContainer;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class X_ModelCRUD extends AttributeContainer implements KvmSerializable
{

    public String TableName;

    public Integer RecordID=0;

    public String recordIDVariable;

    public String Filter;

    public X_Enums.ModelCRUD_Action Action= X_Enums.ModelCRUD_Action.Create;

    public Integer Offset;

    public Integer Limit;

    public X_DataRow DataRow;

    public String serviceType;

    public X_ModelCRUD()
    {
    }
    public String getServiceType() {
        return serviceType;
    }

    public String getTableName() {
        return TableName;
    }

    public Integer getRecordID() {
        return RecordID;
    }

    public String getRecordIDVariable() {
        return recordIDVariable;
    }

    public String getFilter() {
        return Filter;
    }

    public X_Enums.ModelCRUD_Action getAction() {
        return Action;
    }

    public Integer getOffset() {
        return Offset;
    }

    public Integer getLimit() {
        return Limit;
    }

    public X_DataRow getDataRow() {
        return DataRow;
    }

    public void setDataRow(X_DataRow dataRow) {
        DataRow = dataRow;
    }

    public void setServiceType(String serviceType) {
        this.serviceType = serviceType;
    }

    public void setTableName(String tableName) {
        TableName = tableName;
    }

    public void setRecordID(Integer recordID) {
        RecordID = recordID;
    }

    public void setRecordIDVariable(String recordIDVariable) {
        this.recordIDVariable = recordIDVariable;
    }

    public void setFilter(String filter) {
        Filter = filter;
    }

    public void setAction(X_Enums.ModelCRUD_Action action) {
        Action = action;
    }

    public void setOffset(Integer offset) {
        Offset = offset;
    }

    public void setLimit(Integer limit) {
        Limit = limit;
    }

    public X_ModelCRUD(Object paramObj, X_ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                Object obj = info.getValue();
                if (info.name.equals("serviceType"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.serviceType = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.serviceType = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("TableName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.TableName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.TableName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("RecordID"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.RecordID = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.RecordID = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("recordIDVariable"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.recordIDVariable = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.recordIDVariable = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Filter"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.Filter = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.Filter = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Action"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.Action = X_Enums.ModelCRUD_Action.fromString(j.toString());
                            }
                        }
                        else if (obj instanceof X_Enums.ModelCRUD_Action){
                            this.Action = (X_Enums.ModelCRUD_Action)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Offset"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.Offset = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.Offset = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Limit"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.Limit = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.Limit = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("DataRow"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.DataRow = new X_DataRow(j,__envelope);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return serviceType;
        }
        if(propertyIndex==1)
        {
            return TableName;
        }
        if(propertyIndex==2)
        {
            return RecordID;
        }
        if(propertyIndex==3)
        {
            return this.recordIDVariable!=null?this.recordIDVariable:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.Filter!=null?this.Filter:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.Action!=null?this.Action.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.Offset!=null?this.Offset:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.Limit!=null?this.Limit:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.DataRow!=null?this.DataRow:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 9;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "serviceType";
            info.namespace= "http://idempiere.org/ADInterface/1_0";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "TableName";
            info.namespace= "http://idempiere.org/ADInterface/1_0";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "RecordID";
            info.namespace= "http://idempiere.org/ADInterface/1_0";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "recordIDVariable";
            info.namespace= "http://idempiere.org/ADInterface/1_0";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Filter";
            info.namespace= "http://idempiere.org/ADInterface/1_0";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Action";
            info.namespace= "http://idempiere.org/ADInterface/1_0";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "Offset";
            info.namespace= "http://idempiere.org/ADInterface/1_0";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "Limit";
            info.namespace= "http://idempiere.org/ADInterface/1_0";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "DataRow";
            info.namespace= "http://idempiere.org/ADInterface/1_0";
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

    
}

